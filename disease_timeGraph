import numpy as np
import matplotlib.pyplot as plt
from scipy import stats

# Data
years = np.array(["2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021"])
values = np.array([11.37, 11.46, 10.67, 10.11, 10.36, 10.26, 10.88, 11.22, 11.53, 13.67, 14.79])

# Convert years to numeric values for regression math
x_numeric = np.arange(len(years))  # [0, 1, 2, ..., 10]

# Linear regression
slope, intercept, r_value, p_value, std_err = stats.linregress(x_numeric, values)
regression_line = intercept + slope * x_numeric

# Create plot
plt.figure(figsize=(8,5))
plt.scatter(x_numeric, values, label='Data Points', color='blue')
plt.plot(x_numeric, regression_line, color='red', label='Regression Line')

# Replace numeric x-axis with actual year labels
plt.xticks(x_numeric, years, rotation=45)

# Labels and title
plt.xlabel('Year')
plt.ylabel('People (thousands)')
plt.title('Mental Disorder Over the Years UK')
plt.legend()
plt.tight_layout()
plt.show()

# Print regression stats
print("Correlation Coefficient Matrix:")
print(np.corrcoef(x_numeric, values))

print("\nLinear Regression Results:")
print(f"Slope: {slope}")
print(f"Intercept: {intercept}")
print(f"R-squared: {r_value**2}")
print(f"P-value: {p_value}")
print(f"Standard Error: {std_err}")